[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[project]
name = "dask-ngs"
authors = [
  { name = "Oxbow Developers", email = "nabdennur@gmail.com" },
]
description = "Scalable access to bioinformatics data with Dask."
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
  "dask",
  "oxbow>=0.2.0",
  "pandas",
  "pyarrow",
  "typing_extensions >=3.7; python_version<'3.8'",
]

[project.optional-dependencies]
test = [
  "pytest >=6",
  "pytest-cov >=3",
]
dev = [
  "black",
  "pytest >=6",
  "pytest-cov >=3",
  "ruff"
]
docs = [
  "furo",
  "myst_parser>=0.13",
  "sphinx>=4.0",
  "sphinx-autobuild",
  "sphinx-book-theme>=0.1.0",
  "sphinx_copybutton",
]

[project.urls]
Homepage = "https://github.com/abdenlab/dask-ngs"
"Bug Tracker" = "https://github.com/abdenlab/dask-ngs/issues"
Discussions = "https://github.com/abdenlab/dask-ngs/discussions"
Changelog = "https://github.com/abdenlab/dask-ngs/releases"

[tool.hatch]
version.path = "src/dask_ngs/__init__.py"
envs.default.dependencies = [
  "pytest",
  "pytest-cov",
]

[tool.hatch.envs.default.scripts]
lint = "ruff --fix ."
test = "pytest ."
docs = "sphinx-autobuild docs docs/_build/html"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
#filterwarnings = [
#  "error",
#  "ignore:(ast.Str|Attribute s|ast.NameConstant|ast.Num) is deprecated:DeprecationWarning:_pytest",
#]
log_cli_level = "INFO"
testpaths = [
  "tests",
]

[tool.coverage]
run.source = ["dask_ngs"]
port.exclude_lines = [
  'pragma: no cover',
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]

[tool.mypy]
files = ["src", "tests"]
python_version = "3.7"
warn_unused_configs = true
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "dask_ngs.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
select = [
  "E", "F", "W", # flake8
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
target-version = "py37"
src = ["src"]
unfixable = [
  "T20",  # Removes print statements
  "F841", # Removes unused variables
]
exclude = []
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]
